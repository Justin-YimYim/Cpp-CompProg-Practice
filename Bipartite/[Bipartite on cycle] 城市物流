#include<bits/stdc++.h>
using namespace std;
 
const int N=1e6;
 
long long a[N], b[N];
int n,len; 
 
bool solve(int x)
{
    int mn=INT_MAX;
    for(int i=1;i<=2*n;i++)
    {
        int l=lower_bound(b+1,b+1+4*n,a[i]-x)-b;
        int r=upper_bound(b+1,b+1+4*n,a[i]+x)-b-1;
         
        mn=min(mn,i-l);
        if(mn<i-r) return false;
    }
    return true;
}
 
int main()
{   
    std::ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    cin>>n>>len;
     
    for(int i=1;i<=n;i++)
    cin>>a[i];
    for(int i=1;i<=n;i++)
    cin>>b[i];
     
    sort(a+1,a+1+n),sort(b+1,b+1+n);
     
    for(int i=1;i<=n;i++)
    {
        a[i]+=len;
        a[n+i]=a[i]+len;
    }
     
    for(int i=n+1;i<=4*n;i++)
    b[i]=b[i-n]+len;
     
    int l=0,r=len;
    while(l<r)
    {
        int mid((l+r)/2);
        if(solve(mid)) r=mid;
        else l=mid+1;
    }
     
    cout<<l<<endl;
     
    return 0;
}
