// Notice there is three cases to transfer state:
1. Deletion (one step)
2. Insertion (one step)
3. Replace (one or zero step)

class Solution {
public:
    int minDistance(string word1, string word2) {
        int s1Size = word1.size();
        int s2Size = word2.size();
        int dp[s2Size + 1][s1Size + 1];
        
        for (int i{0}; i <= s1Size; i++){
            dp[0][i] = i;
        }
        
        for (int i{1}; i <= s2Size; i++){
            dp[i][0] = i;
        }
        
        for (int i{1}; i <= s2Size; i++){
            for (int j{1}; j <= s1Size; j++){
                int currentMin{min(dp[i][j - 1], dp[i - 1][j]) + 1};
                
                if (word1[j - 1] == word2[i - 1]) dp[i][j] = min(currentMin, dp[i - 1][j - 1]);
                else dp[i][j] = min(currentMin, dp[i - 1][j - 1] + 1);
            }
        }
        
        return dp[s2Size][s1Size];
    }
};
