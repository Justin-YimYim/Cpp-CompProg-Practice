// first construct corner solutions
// normal case
// consider '*' case

class Solution {
public:
    bool isMatch(string &a, string &b){
        int n = a.size() + 1;
        int m = b.size() + 1;
        bool dp[n][m];
        dp[0][0] = true;
        dp[0][1] = false;
        
        for (int i{1}; i < n; i++){
            dp[i][0] = false;
        }
        
        for (int i{2}; i < m; i++){
            if (b[i - 1] == '*'){
                dp[0][i] = dp[0][i - 2];
            }
            else dp[0][i] = false;
        }
        
        for (int i{1}; i < n; i++){
            for (int j{1}; j < m; j++){
                if (a[i - 1] == b[j - 1] || b[j - 1] == '.'){
                    dp[i][j] = dp[i - 1][j - 1];
                }
                else if (b[j - 1] == '*'){
                    if (b[j - 2] != '.' && b[j - 2] != a[i - 1]){
                        dp[i][j] = dp[i][j - 2];
                    }
                    else dp[i][j] = dp[i][j - 2] || dp[i][j - 1] || dp[i - 1][j];
                }
                else{
                    dp[i][j] = false;
                }
            }
        }
        
        return dp[n - 1][m - 1];
    }
};

