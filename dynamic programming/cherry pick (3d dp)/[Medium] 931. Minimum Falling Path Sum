class Solution {
public:

    int minFallingPathSum(vector<vector<int>>& matrix) {
        int x(matrix.size());
        int dp[x];
        for (size_t i = 0; i < x; i++){
            dp[i] = matrix[0][i];
        }
        for (size_t i = 1; i < x; ++i){
            int tmpDp[x];
            for (size_t j = 0; j < x; ++j){
                if (j == 0){
                    tmpDp[0] = min(dp[0], dp[1]);
                }else if (j == x - 1){
                    tmpDp[x - 1] = min(dp[x - 1], dp[x - 2]);
                }else{
                    tmpDp[j] = min(min(dp[j - 1], dp[j]), dp[j + 1]);
                }
                tmpDp[j] += matrix[i][j];
            }
            for (size_t j = 0; j < x; ++j){
                dp[j] = tmpDp[j];
            }
        }
        int ans(INT_MAX);
        for (auto &a: dp){
            ans = min(ans, a);
        }
        return ans;
    }
};
