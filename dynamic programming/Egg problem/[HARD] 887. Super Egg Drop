class Solution {
public:
    int superEggDrop(int k, int n) {
        int dp[k + 1][n + 1];
        for (int i{0}; i <= n; i++){
            dp[1][i] = i;
        }
        for (int i{2}; i <= k; i++){
            dp[i][0] = 0;
            dp[i][1] = 1;
            for (int h{2}; h <= n; h++){
                int left{1};
                int right{h};
                int mid;
                while (left < right){
                    mid = (right - left + 1) / 2;
                    if (dp[i - 1][mid + left - 1] > dp[i][h - mid - left]){
                        right -= mid;
                    }else if(dp[i - 1][mid + left - 1] < dp[i][h - mid - left]){
                        left += mid;
                    }else{
                        break;
                    }
                }
                dp[i][h] = max(dp[i - 1][mid + left - 1], dp[i][h - mid - left]) + 1;
            }
        }
        return dp[k][n];
    }
}; 
