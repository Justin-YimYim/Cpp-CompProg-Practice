class Solution {
public:
    int binarySearch(vector<int> &nums, int target, int low, int high){
        int mid = (low + high)/ 2;
        if (target == nums[mid]) return mid;
        if (nums[low] == target) return low;
        if (low + 1 == high){
            if (nums[low] == target) return low;
            else if(nums[high] == target) return high;
            else return -1;
        }
        if (low == high) return -1;
        
        if ((target >= nums[low] && nums[mid] >= nums[low]) || (target <= nums[low] && nums[mid] <= nums[low])){
            if (target < nums[mid]) return binarySearch(nums, target, low, mid);
            else return binarySearch(nums, target, mid, high);
        }else
        {
            if (target < nums[mid]) return binarySearch(nums, target, mid, high);
            else return binarySearch(nums, target, low, mid);
        }
    }
    int search(vector<int>& nums, int target) {
        return binarySearch(nums, target, 0, nums.size() - 1);        
    }
};
