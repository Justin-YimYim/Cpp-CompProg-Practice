// Aware INT_MAX, INT_MIN and always use long in the middle of calculation
// labs() is your good friend to transfer int to long absolute value

class Solution {
public:
    int divide(int dividend, int divisor) {
        int ans{0};
        int sign = (dividend < 0 && divisor > 0) || (dividend > 0 && divisor < 0) ? -1 : 1;
        if (dividend == INT_MIN && divisor > 0){
            sign = -1;
        }else if(dividend == INT_MAX && divisor < 0){
            sign = -1;
        }
        
        if (dividend == INT_MIN && divisor == -1){
            return INT_MAX;
        }else if (dividend == INT_MIN && divisor == 1){
            return INT_MIN;
        }else if (dividend == INT_MAX && divisor == -1){
            return INT_MIN;
        }else if (dividend == INT_MAX && divisor == 1){
            return INT_MAX;
        }
        
        long dividend_l = labs(dividend);
        long divisor_l = labs(divisor);
        
        if (divisor == 1){
            return sign * dividend_l;
        }

        while (dividend_l >= divisor_l){
            long tmp{1};
            long looper{divisor_l};
            while (dividend_l >= looper){
                looper <<= 1;
                tmp <<= 1;
            }
            looper >>= 1;
            tmp >>= 1;
            dividend_l -= looper;
            ans += tmp;
        }
        
        return ans * sign;
    }
};
