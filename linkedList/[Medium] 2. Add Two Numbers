/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int add{0};
        ListNode* ans{l1};
        while(l1->next != nullptr || l2->next != nullptr){
            if (l1->next == nullptr){
                l1->next = new ListNode();
            }
            if (l2->next == nullptr){
                l2->next = new ListNode();
            }
            int sum{l1->val + l2->val + add};
            if (sum >= 10){
                add = 1;
            }else{
                add = 0;
            }
            l1->val = sum % 10;
            l1 = l1->next;
            l2 = l2->next;
        }
        int sum{l1->val + l2->val + add};
        if (sum >= 10){
            add = 1;
        }else{
            add = 0;
        }
        l1->val = sum % 10;
        if (add == 1){
            l1->next = new ListNode(add);
        }
        return ans;
    }
};
